/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import DAO.Order_XuLy;
import DAO.TachBanDAO;
import POJO.BanAn;
import POJO.MonAn_Temp;
import POJO.Order;
import POJO.Order_Detail;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class TachBan extends javax.swing.JFrame {

    DefaultTableModel tableModelCu = new DefaultTableModel();
    DefaultTableModel tableModelMoi = new DefaultTableModel();
    private ArrayList<Order_Detail> ArrayMonAn = new ArrayList<>();
    private ArrayList<Order_Detail> ArrayNew = new ArrayList<>();
    private int idHoadon;

    /**
     * Creates new form TachBan
     */
    public TachBan(int id) {

        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        idHoadon = id;
        String[] tieudechitiet = new String[]{"ID", "Tên món", "Số lượng", "Đơn giá", "Thành tiền"};
        tableModelCu.setColumnIdentifiers(tieudechitiet);
        tbCu.setRowHeight(30);

        String[] tieude = new String[]{"ID", "Tên món", "Số lượng", "Đơn giá", "Thành tiền"};
        tableModelMoi.setColumnIdentifiers(tieude);
        tbMoi.setRowHeight(30);
        Order_XuLy xuly = new Order_XuLy();
        ArrayMonAn = xuly.getOrderDetail(idHoadon);
        loadMonChuaTach();
        LoadCBBan();
    }

    public void loadMonDatach() {
        tableModelMoi.setRowCount(0);

//        ArrayNew = xuly.getOrderDetail(idHoadon);
        for (Order_Detail item : ArrayNew) {
            Object[] rowData = {item.getIdMonan(), item.getTenMonan(), item.getSoLuong(), item.getDonGia(), item.getThanhTien()};
            tableModelMoi.addRow(rowData);
        }
        tbMoi.setModel(tableModelMoi);

    }

    public void loadMonChuaTach() {
        tableModelCu.setRowCount(0);
        Order_XuLy xuly = new Order_XuLy();

        for (Order_Detail item : ArrayMonAn) {
            Object[] rowData = {item.getIdMonan(), item.getTenMonan(), item.getSoLuong(), item.getDonGia(), item.getThanhTien()};
            tableModelCu.addRow(rowData);
        }
        tbCu.setModel(tableModelCu);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbCu = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbMoi = new javax.swing.JTable();
        btnTach = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        txtSoLuong = new javax.swing.JTextField();
        cbBan = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tbCu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbCu);

        tbMoi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tbMoi);

        btnTach.setText("Tách");
        btnTach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTachActionPerformed(evt);
            }
        });

        jButton2.setText("Hoàn thành");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Hủy");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Chọn bàn chuyển");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbBan, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnTach, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 885, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTach, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbBan, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTachActionPerformed
        int selectedRow = tbCu.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn món cần tách!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Object idPhieu = tbCu.getValueAt(selectedRow, 0);
        System.out.println(selectedRow);
        int id = Integer.parseInt(idPhieu.toString());

        if (selectedRow != -1) {

            String soluong = txtSoLuong.getText();

            if (soluong.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Cảnh báo trống số lượng !", "Thông báo", JOptionPane.WARNING_MESSAGE);
            } else {

                Object idMa = tbCu.getValueAt(selectedRow, 0);
                int idMonAn = Integer.parseInt(idMa.toString());
                Object tenMon = tbCu.getValueAt(selectedRow, 1);
                Object soLuong = tbCu.getValueAt(selectedRow, 2);
                Object donGia = tbCu.getValueAt(selectedRow, 3);
                // Object thanhTien = tbCu.getValueAt(selectedRow, 4);

                int soLuongcheck = Integer.parseInt(soluong);
                int soLuongcheckTable = Integer.parseInt(soLuong.toString());

                if (soLuongcheck > soLuongcheckTable) {
                    JOptionPane.showMessageDialog(this, "Vượt quá số lượng cho phép !", "Thông báo", JOptionPane.WARNING_MESSAGE);
                } else {
                    Order_Detail newOrderDetail = new Order_Detail();

                    newOrderDetail.setIdMonan(Integer.parseInt(idMa.toString()));
                    newOrderDetail.setTenMonan(tenMon.toString());

                    newOrderDetail.setSoLuong(soLuongcheck);
                    newOrderDetail.setDonGia(Double.parseDouble(donGia.toString()));
                    double giatien = Double.parseDouble(donGia.toString());
                    double thanhtien = soLuongcheck * giatien;
                    newOrderDetail.setThanhTien(thanhtien);

                    boolean checkT = false;

                    for (Order_Detail item : ArrayNew) {
                        if (item.getIdMonan() == idMonAn) {
                            item.setSoLuong(soLuongcheck + item.getSoLuong());
                            item.setThanhTien(item.getSoLuong() * item.getDonGia());
                            checkT = true;
                            break;
                        }
                    }

                    if (!checkT) {
                        ArrayNew.add(newOrderDetail);
                    }

                    updateSoLuong(idMonAn, soLuongcheck, soLuongcheckTable);
                    loadMonChuaTach();
                    loadMonDatach();

                }

            }
        } else {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn món cần tách!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnTachActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        //Id bàn  chuyển
        int idBan = 0;
        ArrayList<BanAn> list = TachBanDAO.laydanhsachban();
        Object tenBan = cbBan.getSelectedItem();
        String nhacc = (String) tenBan.toString();
        for (BanAn item : list) {
            if (item.getTenban().equals(nhacc)) {
                idBan = item.getIdban();
                break;
            }
        }

        double tongTien = 0;
        String trangthai = "unsuccessful";

        for (Order_Detail item : ArrayNew) {
            //Lấy tổng tiền mới
            tongTien = (item.getDonGia() * item.getSoLuong()) + tongTien;
        }

        //Tạo ra 1 hóa đơn mới cho bàn đó
        Order_XuLy add = new Order_XuLy();
        Order item1 = new Order();
        item1.setId_ban(idBan);
        item1.setGiamgia(0);
        item1.setTongbill((float) tongTien);
        item1.setTrangthai(trangthai);
        item1.setThanhtien((float) tongTien);

        Date currentDate = new Date();
        boolean themOrder = add.InsertOrder(item1, currentDate);
        boolean themOrder_detail = false;
        if (themOrder) {

            //Lấy ra id mới để thêm cho chi tiết đơn hàng
            int order_id = add.GetIdOrder();
            for (Order_Detail itemDT : ArrayNew) {
                itemDT.setOrderId(order_id);
                //  add.InsertOrderDetail(itemDT);
                if (add.InsertOrderDetail(itemDT)) {
                    themOrder_detail = true;
                } else {
                    themOrder_detail = false;
                }
            }

            //Bàn cũ
            double tongtienbanCu = 0;
            for (Order_Detail item : ArrayMonAn) {
                //System.out.println("ID : "+item.getIdMonan()+" Thành tiền : "+item.getThanhTien() + "\n");

                TachBanDAO.UpDateCTDH(idHoadon, item.getIdMonan(), item.getSoLuong(), item.getThanhTien());
                tongtienbanCu = (item.getDonGia() * item.getSoLuong()) + tongtienbanCu;
            }

            Order_XuLy xuly = new Order_XuLy();
            ArrayList<Order_Detail> dscheck = xuly.getOrderDetail(idHoadon);
            for (Order_Detail it : dscheck) {
                for (Order_Detail item : ArrayMonAn) {
                    if (it.getIdMonan() == item.getIdMonan()) {

                        // TachBanDAO.deleteOrderDetail(idHoadon, it.getIdMonan());
                    }
                }
            }
            if (themOrder_detail == true) {
                boolean updateban = add.UpDateTrangThaiBan(idBan, currentDate);
                TachBanDAO.UpDateDonHang(idHoadon, String.valueOf(tongtienbanCu), String.valueOf(tongtienbanCu));
                JOptionPane.showMessageDialog(this, "Cập nhật thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
            }

        }


    }//GEN-LAST:event_jButton2ActionPerformed
    public void updateSoLuong(int idMonan, int newSoLuong, int soluongcu) {
        int soluongConlai = soluongcu - newSoLuong;
        if (soluongConlai == 0) {
            ArrayMonAn.removeIf(item -> item.getIdMonan() == idMonan);
        } else {
            for (Order_Detail item : ArrayMonAn) {
                if (item.getIdMonan() == idMonan) {
                    item.setSoLuong(soluongConlai);
                    item.setThanhTien(soluongConlai * item.getDonGia());
                    break;
                }
            }
        }
    }

    public void LoadCBBan() {
        ArrayList<BanAn> list = TachBanDAO.laydanhsachban();
        for (BanAn item : list) {
            cbBan.addItem(item.getTenban());
        }
    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(TachBan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(TachBan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(TachBan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(TachBan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new TachBan().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTach;
    private javax.swing.JComboBox<String> cbBan;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbCu;
    private javax.swing.JTable tbMoi;
    private javax.swing.JTextField txtSoLuong;
    // End of variables declaration//GEN-END:variables
}
